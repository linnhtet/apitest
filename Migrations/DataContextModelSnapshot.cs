// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entities.BusinessArea", b =>
                {
                    b.Property<int>("BusinessAreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BusinessAreaCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("BusinessAreaDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.HasKey("BusinessAreaID");

                    b.ToTable("BusinessAreas");
                });

            modelBuilder.Entity("WebApi.Entities.BusinessAreaJoinCostCenter", b =>
                {
                    b.Property<int>("BusinessAreaID")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterID")
                        .HasColumnType("int");

                    b.HasIndex("BusinessAreaID", "CostCenterID")
                        .IsUnique();

                    b.ToTable("BusinessAreaJoinCostCenters");
                });

            modelBuilder.Entity("WebApi.Entities.Company", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyCode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("CompanyDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("CompanyID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WebApi.Entities.CostCenter", b =>
                {
                    b.Property<int>("CostCenterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CostCenterCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ValidToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CostCenterID");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("WebApi.Entities.DefaultToggleColumn", b =>
                {
                    b.Property<int>("DefaultToggleColumnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SelectedColumn")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("WebPage")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("DefaultToggleColumnID");

                    b.ToTable("DefaultToggleColumns");
                });



            modelBuilder.Entity("WebApi.Entities.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BusinessAreaID")
                        .HasColumnType("int");

                    b.Property<string>("LocationDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LocationName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("LocationID");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("WebApi.Entities.Mail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(3000)")
                        .HasMaxLength(3000);

                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<bool>("HasAttachments")
                        .HasColumnType("bit");

                    b.Property<bool>("Important")
                        .HasColumnType("bit");

                    b.Property<int>("Label")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<Guid?>("OriginMailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<int>("ReceivingUserID")
                        .HasColumnType("int");

                    b.Property<int>("SendingUserID")
                        .HasColumnType("int");

                    b.Property<bool>("SentSuccessToSMTPServer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Starred")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReceivingUserID");

                    b.HasIndex("SendingUserID");

                    b.ToTable("Mail");
                });

            modelBuilder.Entity("WebApi.Entities.MailAttachment", b =>
                {
                    b.Property<Guid>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<Guid>("MailID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SavedPath")
                        .HasColumnType("text");

                    b.HasKey("AttachmentID");

                    b.ToTable("MailAttachments");
                });

            modelBuilder.Entity("WebApi.Entities.Module", b =>
                {
                    b.Property<int>("ModuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("ModuleOrder")
                        .HasColumnType("int");

                    b.Property<string>("ModuleTitle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModuleTranslate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("ModuleID");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("WebApi.Entities.ModulePage", b =>
                {
                    b.Property<int>("ModulePageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsHide")
                        .HasColumnType("bit");

                    b.Property<int>("ModuleID")
                        .HasColumnType("int");

                    b.Property<string>("ModulePageCodeName")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModulePageTitle")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("ModulePageTranslate")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PageAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("PageFile")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("PageOrder")
                        .HasColumnType("int");

                    b.HasKey("ModulePageID");

                    b.ToTable("ModulePages");
                });

            modelBuilder.Entity("WebApi.Entities.ModulePageJoinUserRight", b =>
                {
                    b.Property<int>("ModulePageJoinUserRightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModulePageID")
                        .HasColumnType("int");

                    b.Property<int>("UserRightID")
                        .HasColumnType("int");

                    b.HasKey("ModulePageJoinUserRightID");

                    b.ToTable("ModulePageJoinUserRights");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("int");

                    b.Property<int>("EmploymentStatus")
                        .HasColumnType("int");

                    b.Property<bool>("Hide")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsLastModifiedBySAPInterface")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastFailedLoginOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastSuccessfulLoginOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeContactNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("PasswordExpiredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("PasswordLastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("StaffEmail")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApi.Entities.UserJoinUserRole", b =>
                {
                    b.Property<int>("UserJoinUserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsLastModifiedBySAPInterface")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLock")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserJoinUserRoleID");

                    b.ToTable("UserJoinUserRoles");
                });

            modelBuilder.Entity("WebApi.Entities.UserRight", b =>
                {
                    b.Property<int>("UserRightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PageModule")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("UserRightDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserRightID");

                    b.ToTable("UserRights");
                });

            modelBuilder.Entity("WebApi.Entities.UserRole", b =>
                {
                    b.Property<int>("UserRoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserRoleDescription")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserRoleID");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("WebApi.Entities.UserRoleJoinUserRight", b =>
                {
                    b.Property<int>("UserRoleJoinUserRightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRightID")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleID")
                        .HasColumnType("int");

                    b.HasKey("UserRoleJoinUserRightID");

                    b.ToTable("UserRoleJoinUserRights");
                });

            modelBuilder.Entity("WebApi.Entities.UserSavedFilter", b =>
                {
                    b.Property<int>("UserSavedFilterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllFilters")
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("WebPage")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserSavedFilterID");

                    b.ToTable("UserSavedFilters");
                });

            modelBuilder.Entity("WebApi.Entities.UserSavedToggleColumn", b =>
                {
                    b.Property<int>("UserSavedToggleColumnID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SelectedColumn")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("WebPage")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("UserSavedToggleColumnID");

                    b.ToTable("UserSavedToggleColumns");
                });

            modelBuilder.Entity("WebApi.Entities.UserSession", b =>
                {
                    b.Property<Guid>("SessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceIDOrIPAddress")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ExpiredOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsLDAPLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLogout")
                        .HasColumnType("bit");

                    b.Property<string>("LoginSource")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("SessionID");

                    b.ToTable("UserSessions");
                });


            modelBuilder.Entity("WebApi.Models.Messaging.MailModel", b =>
                {
                    b.Property<int>("Folder")
                        .HasColumnType("int");

                    b.Property<bool>("HasAttachments")
                        .HasColumnType("bit");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Important")
                        .HasColumnType("bit");

                    b.Property<int>("Label")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<bool>("Read")
                        .HasColumnType("bit");

                    b.Property<string>("ReceivingStaffEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendingStaffEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendingStaffName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SentSuccessToSMTPServer")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SentTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Starred")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.ToTable("MailModel");
                });


            modelBuilder.Entity("WebApi.Entities.Mail", b =>
                {
                    b.HasOne("WebApi.Entities.User", "ReceivingUser")
                        .WithMany()
                        .HasForeignKey("ReceivingUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entities.User", "SendingUser")
                        .WithMany()
                        .HasForeignKey("SendingUserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

#pragma warning restore 612, 618
        }
    }
}
